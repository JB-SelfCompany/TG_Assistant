"""Start and help handlers"""
import logging
from aiogram import Router, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.exceptions import TelegramBadRequest

from keyboards.menu import get_main_menu

router = Router(name="start")
logger = logging.getLogger(__name__)


@router.message(CommandStart())
async def cmd_start(message: Message, state: FSMContext) -> None:
    """
    Handler for /start command
    """
    await state.clear()
    
    welcome_text = (
        f"üëã –ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.full_name}</b>!\n\n"
        "–Ø –º–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫. –ú–æ–≥—É –ø–æ–º–æ—á—å —Ç–µ–±–µ:\n\n"
        "üìã –£–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞–¥–∞—á–∞–º–∏ –∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏\n"
        "üéÇ –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è\n"
        "üå§ –ü—Ä–æ–≤–µ—Ä—è—Ç—å –ø–æ–≥–æ–¥—É\n"
        "üí± –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∞–ª—é—Ç—ã\n"
        "üìç –ù–∞—Ö–æ–¥–∏—Ç—å –±–ª–∏–∂–∞–π—à–∏–µ –º–µ—Å—Ç–∞\n\n"
        "–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:"
    )
    
    await message.answer(
        text=welcome_text,
        reply_markup=get_main_menu()
    )
    
    logger.info(f"User {message.from_user.id} started the bot")


@router.message(Command("help"))
async def cmd_help(message: Message) -> None:
    """
    Handler for /help command
    """
    help_text = (
        "<b>üìñ –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞</b>\n\n"
        "<b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
        "/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
        "/menu - –û—Ç–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n\n"
        "<b>–§—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞:</b>\n\n"
        "<b>üìã –ó–∞–¥–∞—á–∏:</b>\n"
        "‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á —Å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏\n"
        "‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–æ–º –∑–∞–¥–∞—á\n"
        "‚Ä¢ –û—Ç–ª–æ–∂–∏—Ç—å –∏–ª–∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–¥–∞—á—É\n\n"
        "<b>üéÇ –î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è:</b>\n"
        "‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏—è\n"
        "‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è\n\n"
        "<b>üå§ –ü–æ–≥–æ–¥–∞:</b>\n"
        "‚Ä¢ –¢–µ–∫—É—â–∞—è –ø–æ–≥–æ–¥–∞\n"
        "‚Ä¢ –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ 5 –¥–Ω–µ–π\n\n"
        "<b>üí± –í–∞–ª—é—Ç—ã:</b>\n"
        "‚Ä¢ –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç\n"
        "‚Ä¢ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤–∞–ª—é—Ç\n\n"
        "<b>üìç –ú–µ—Å—Ç–∞:</b>\n"
        "‚Ä¢ –ü–æ–∏—Å–∫ –±–ª–∏–∂–∞–π—à–∏—Ö –∞–ø—Ç–µ–∫, –º–∞–≥–∞–∑–∏–Ω–æ–≤\n"
        "‚Ä¢ –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–æ–≤\n"
    )
    
    await message.answer(
        text=help_text,
        reply_markup=get_main_menu()
    )


@router.message(Command("menu"))
async def cmd_menu(message: Message, state: FSMContext) -> None:
    """
    Handler for /menu command
    """
    await state.clear()
    
    await message.answer(
        text="üè† <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é:",
        reply_markup=get_main_menu()
    )


@router.callback_query(F.data == "menu:main")
async def show_main_menu(callback: CallbackQuery, state: FSMContext) -> None:
    """Return to main menu"""
    await state.clear()
    
    try:
        await callback.message.edit_text(
            text="<b>üì± –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:",
            reply_markup=get_main_menu()
        )
    except TelegramBadRequest:
        pass
    await callback.answer()


@router.callback_query(F.data == "cancel")
async def callback_cancel(callback: CallbackQuery, state: FSMContext) -> None:
    """
    Cancel current operation
    """
    await state.clear()
    
    await callback.message.edit_text(
        text="‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞\n\nüè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
        reply_markup=get_main_menu()
    )
    await callback.answer("–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")